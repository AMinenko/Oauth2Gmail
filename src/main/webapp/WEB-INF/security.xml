<?xml  version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <beans:import resource="hibernate.xml"/>

  <!--  &lt;!&ndash;   REST STYLE SECURITY CONFIG&ndash;&gt;
    <http entry-point-ref="restAuthenticationEntryPoint">
        <intercept-url pattern="/mails/**" access="ROLE_ADMIN"/>
        <form-login
                authentication-success-handler-ref="savedRequestAwareAuthenticationSuccessHandler"
                authentication-failure-handler-ref="myFailureHandler"
                />
        <logout />
    </http>

       <beans:bean id="myFailureHandler"
                class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>
-->


        <!--USUAL STYLE FORM AUTHENTICATION CONFIG-->
    <http auto-config="true" use-expressions="true">
            <intercept-url pattern="/mails**" access="hasRole('ROLE_ADMIN')" />

            <!-- access denied page -->
            <access-denied-handler error-page="/403" />
            <form-login
             login-page="/login"
                    default-target-url="/index"
                    authentication-failure-url="/login?error"
                    username-parameter="username"
                    password-parameter="password"
                    authentication-success-handler-ref="savedRequestAwareAuthenticationSuccessHandler"/>
            <logout logout-url="/logout" logout-success-url="/login?logout" invalidate-session="true"
                    delete-cookies="JSESSIONID"/>

            <!-- enable remember me -->
            <remember-me
                    token-validity-seconds="7600"
                    remember-me-parameter="remember-me"
                    data-source-ref="dataSource" />

            <!-- enable csrf protection -->
            <!--csrf />-->
        </http>

    <authentication-manager>
        <authentication-provider ref="authenticationProvider" >
            <!--<password-encoder hash="bcrypt" />-->
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="authenticationProvider" class="com.anmi.mailclient.core.security.spring.LimitLoginAuthenticationProvider"/>
    <beans:bean name="accountDetailsService" class="com.anmi.mailclient.core.security.spring.AccountDetailsService"/>


    <!-- Persistent Remember Me Service -->
    <beans:bean id="rememberMeAuthenticationProvider" class=
            "org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:property name="key" value="myAppKey" />
        <beans:property name="tokenRepository" ref="jdbcTokenRepository" />
        <beans:property name="userDetailsService" ref="accountDetailsService" />
    </beans:bean>

    <!-- Uses a database table to maintain a set of persistent login data -->
    <beans:bean id="jdbcTokenRepository"
                class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="createTableOnStartup" value="false" />
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>


        <!-- If request parameter "targetUrl" is existed, then forward to this url -->
    <!-- For update login form -->
    <beans:bean id="savedRequestAwareAuthenticationSuccessHandler"
                class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
            <beans:property name="targetUrlParameter" value="request"/>
    </beans:bean>

</beans:beans>